{"version":3,"sources":["components/Carousel/Carousel.tsx","components/Form/Form.tsx","App.tsx","index.tsx"],"names":["Carousel","state","position","handleNextButtonClick","props","images","itemWidth","frameSize","step","infinite","stepWidth","maxRightPosition","length","offset","Math","max","setState","handlePreviousButtonClick","maxLeftPosition","min","this","animationDuration","className","style","width","height","marginLeft","transition","map","image","index","src","alt","toString","type","onClick","disabled","Component","Form","updateValues","event","currentTarget","name","value","stateValue","checked","prevState","htmlFor","id","onChange","imagesFromServer","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.317f3a37.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  itemWidth: number,\n  frameSize: number,\n  step: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\ntype State = {\n  position: number,\n};\n\nexport class Carousel extends Component<Props, State> {\n  state = {\n    position: 0,\n  };\n\n  handleNextButtonClick = () => {\n    const { position } = this.state;\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      step,\n      infinite,\n    } = this.props;\n\n    const stepWidth = step * itemWidth;\n    const maxRightPosition = itemWidth * (frameSize - images.length);\n    const offset = Math.max((position - stepWidth), maxRightPosition);\n\n    this.setState({\n      position: (infinite && position === maxRightPosition)\n        ? 0\n        : offset,\n    });\n  };\n\n  handlePreviousButtonClick = () => {\n    const { position } = this.state;\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      step,\n      infinite,\n    } = this.props;\n\n    const stepWidth = step * itemWidth;\n    const maxLeftPosition = itemWidth * (frameSize - images.length);\n    const offset = Math.min((position + stepWidth), 0);\n\n    this.setState({\n      position: (infinite && position === 0)\n        ? maxLeftPosition\n        : offset,\n    });\n  };\n\n  render() {\n    const { position } = this.state;\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      animationDuration,\n      infinite,\n    } = this.props;\n\n    return (\n      <div className=\"Carousel\">\n        <div\n          className=\"Carousel__wrapper\"\n          style={{\n            width: `${itemWidth * frameSize}px`,\n            height: `${itemWidth}px`,\n          }}\n        >\n          <ul\n            className=\"Carousel__list\"\n            style={{\n              width: `${itemWidth * images.length}px`,\n              marginLeft: `${position}px`,\n              transition: `margin-left ${animationDuration}ms`,\n            }}\n          >\n            {images.map((image, index) => (\n              <li className=\"Carousel__list-item\" key={image}>\n                <img\n                  className=\"Carousel__image\"\n                  src={image}\n                  alt={index.toString()}\n                  style={{\n                    width: `${itemWidth}px`,\n                  }}\n                />\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <div className=\"Carousel__buttons\">\n          <button\n            type=\"button\"\n            className=\"Carousel__button\"\n            data-cy=\"next\"\n            onClick={this.handlePreviousButtonClick}\n            disabled={!infinite && position === 0}\n          >\n            ⇦\n          </button>\n          <button\n            data-cy=\"next\"\n            type=\"button\"\n            className=\"Carousel__button\"\n            onClick={this.handleNextButtonClick}\n            disabled={\n              !infinite && position === itemWidth * (frameSize - images.length)\n            }\n          >\n            ⇨\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Carousel } from '../Carousel/Carousel';\nimport './Form.scss';\n\ntype Props = {\n  images: string[],\n};\n\ntype State = {\n  itemWidth: number,\n  frameSize: number,\n  step: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\nexport class Form extends Component<Props, State> {\n  state = {\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  updateValues = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.currentTarget;\n    const stateValue = name === 'infinite'\n      ? event.currentTarget.checked\n      : value;\n\n    this.setState(prevState => ({\n      ...prevState,\n      [name]: stateValue,\n    }));\n  };\n\n  render() {\n    const { images } = this.props;\n    const {\n      itemWidth,\n      frameSize,\n      step,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <>\n        <form className=\"Form\">\n          <label className=\"Form__lable\" htmlFor=\"itemWidth\">\n            Item width\n          </label>\n          <input\n            id=\"itemWidth\"\n            type=\"number\"\n            name=\"itemWidth\"\n            className=\"Form__input\"\n            step=\"10\"\n            value={itemWidth}\n            onChange={this.updateValues}\n          />\n\n          <label className=\"Form__lable\" htmlFor=\"frameSize\">\n            Frame size\n          </label>\n          <input\n            id=\"frameSize\"\n            type=\"number\"\n            name=\"frameSize\"\n            className=\"Form__input\"\n            min=\"1\"\n            max={images.length}\n            value={frameSize}\n            onChange={this.updateValues}\n          />\n\n          <label className=\"Form__lable\" htmlFor=\"step\">\n            Step\n          </label>\n          <input\n            id=\"step\"\n            type=\"number\"\n            name=\"step\"\n            className=\"Form__input\"\n            min=\"1\"\n            max={images.length}\n            value={step}\n            onChange={this.updateValues}\n          />\n\n          <label className=\"Form__lable\" htmlFor=\"animationDuration\">\n            Animation duration\n          </label>\n          <input\n            id=\"animationDuration\"\n            type=\"number\"\n            name=\"animationDuration\"\n            className=\"Form__input\"\n            step=\"500\"\n            value={animationDuration}\n            onChange={this.updateValues}\n          />\n\n          <label className=\"Form__lable\" htmlFor=\"infinite\">\n            <input\n              id=\"infinite\"\n              type=\"checkbox\"\n              name=\"infinite\"\n              className=\"Form__input Form__checkbox\"\n              checked={infinite}\n              onChange={this.updateValues}\n            />\n\n            Infinite\n          </label>\n        </form>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Form } from './components/Form/Form';\n\nconst imagesFromServer = [\n  './img/1.png',\n  './img/2.png',\n  './img/3.png',\n  './img/4.png',\n  './img/5.png',\n  './img/6.png',\n  './img/7.png',\n  './img/8.png',\n  './img/9.png',\n  './img/10.png',\n];\n\nconst App: React.FC = () => (\n  <div className=\"App\">\n    {/* eslint-disable-next-line */}\n    <h1 data-cy=\"title\" className=\"App__title\">Carousel with {imagesFromServer.length} images</h1>\n\n    <Form images={imagesFromServer} />\n  </div>\n);\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}